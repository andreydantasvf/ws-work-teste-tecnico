version: "3.9"

services:
  frontend:
    container_name: frontend-reactjs
    build:
      context: ./frontend-reactjs
      target: dev
    ports:
      - "8080:8080"
    volumes:
      - ./frontend-reactjs:/app
    env_file:
      - ./frontend-reactjs/.env
    depends_on:
      - api
    networks:
      - app-network

  api:
    container_name: node_api
    build:
      context: ./backend-nodejs
      target: dev
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./backend-nodejs/src:/app/src
      - ./backend-nodejs/prisma:/app/prisma
    env_file:
      - ./backend-nodejs/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    env_file:
      - ./backend-nodejs/.env
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
